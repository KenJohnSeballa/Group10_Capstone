// Generated by view binder compiler. Do not edit!
package com.gk.koumpyol.dailyplanner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.gk.koumpyol.dailyplanner.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView changeCredentials;

  @NonNull
  public final CheckBox checkBoxRemMe;

  @NonNull
  public final TextView eraseDeletedEvents;

  @NonNull
  public final TextView eraseDeletedLists;

  @NonNull
  public final TextView eraseDeletedPlaces;

  @NonNull
  public final TextView erasePastEvents;

  private FragmentSettingsBinding(@NonNull LinearLayout rootView,
      @NonNull TextView changeCredentials, @NonNull CheckBox checkBoxRemMe,
      @NonNull TextView eraseDeletedEvents, @NonNull TextView eraseDeletedLists,
      @NonNull TextView eraseDeletedPlaces, @NonNull TextView erasePastEvents) {
    this.rootView = rootView;
    this.changeCredentials = changeCredentials;
    this.checkBoxRemMe = checkBoxRemMe;
    this.eraseDeletedEvents = eraseDeletedEvents;
    this.eraseDeletedLists = eraseDeletedLists;
    this.eraseDeletedPlaces = eraseDeletedPlaces;
    this.erasePastEvents = erasePastEvents;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.changeCredentials;
      TextView changeCredentials = ViewBindings.findChildViewById(rootView, id);
      if (changeCredentials == null) {
        break missingId;
      }

      id = R.id.checkBox_remMe;
      CheckBox checkBoxRemMe = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxRemMe == null) {
        break missingId;
      }

      id = R.id.eraseDeletedEvents;
      TextView eraseDeletedEvents = ViewBindings.findChildViewById(rootView, id);
      if (eraseDeletedEvents == null) {
        break missingId;
      }

      id = R.id.eraseDeletedLists;
      TextView eraseDeletedLists = ViewBindings.findChildViewById(rootView, id);
      if (eraseDeletedLists == null) {
        break missingId;
      }

      id = R.id.eraseDeletedPlaces;
      TextView eraseDeletedPlaces = ViewBindings.findChildViewById(rootView, id);
      if (eraseDeletedPlaces == null) {
        break missingId;
      }

      id = R.id.erasePastEvents;
      TextView erasePastEvents = ViewBindings.findChildViewById(rootView, id);
      if (erasePastEvents == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((LinearLayout) rootView, changeCredentials, checkBoxRemMe,
          eraseDeletedEvents, eraseDeletedLists, eraseDeletedPlaces, erasePastEvents);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
