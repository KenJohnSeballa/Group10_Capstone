// Generated by view binder compiler. Do not edit!
package com.gk.koumpyol.dailyplanner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.gk.koumpyol.dailyplanner.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText confirmPword;

  @NonNull
  public final TextView dailyPlanner;

  @NonNull
  public final Button entry;

  @NonNull
  public final LinearLayout inputsLayout;

  @NonNull
  public final EditText pword;

  @NonNull
  public final ConstraintLayout relativeLayout;

  @NonNull
  public final CheckBox rememberMe;

  @NonNull
  public final EditText username;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView, @NonNull EditText confirmPword,
      @NonNull TextView dailyPlanner, @NonNull Button entry, @NonNull LinearLayout inputsLayout,
      @NonNull EditText pword, @NonNull ConstraintLayout relativeLayout,
      @NonNull CheckBox rememberMe, @NonNull EditText username) {
    this.rootView = rootView;
    this.confirmPword = confirmPword;
    this.dailyPlanner = dailyPlanner;
    this.entry = entry;
    this.inputsLayout = inputsLayout;
    this.pword = pword;
    this.relativeLayout = relativeLayout;
    this.rememberMe = rememberMe;
    this.username = username;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.confirmPword;
      EditText confirmPword = ViewBindings.findChildViewById(rootView, id);
      if (confirmPword == null) {
        break missingId;
      }

      id = R.id.dailyPlanner;
      TextView dailyPlanner = ViewBindings.findChildViewById(rootView, id);
      if (dailyPlanner == null) {
        break missingId;
      }

      id = R.id.entry;
      Button entry = ViewBindings.findChildViewById(rootView, id);
      if (entry == null) {
        break missingId;
      }

      id = R.id.inputsLayout;
      LinearLayout inputsLayout = ViewBindings.findChildViewById(rootView, id);
      if (inputsLayout == null) {
        break missingId;
      }

      id = R.id.pword;
      EditText pword = ViewBindings.findChildViewById(rootView, id);
      if (pword == null) {
        break missingId;
      }

      ConstraintLayout relativeLayout = (ConstraintLayout) rootView;

      id = R.id.rememberMe;
      CheckBox rememberMe = ViewBindings.findChildViewById(rootView, id);
      if (rememberMe == null) {
        break missingId;
      }

      id = R.id.username;
      EditText username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, confirmPword, dailyPlanner,
          entry, inputsLayout, pword, relativeLayout, rememberMe, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
