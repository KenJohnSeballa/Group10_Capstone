// Generated by view binder compiler. Do not edit!
package com.gk.koumpyol.dailyplanner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.gk.koumpyol.dailyplanner.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCalendarBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnAddEvent;

  @NonNull
  public final Button btnNextMonth;

  @NonNull
  public final Button btnPrevMonth;

  @NonNull
  public final RecyclerView calendarRecyclerView;

  @NonNull
  public final ListView eventsListView;

  @NonNull
  public final TextView monthYearTV;

  @NonNull
  public final LinearLayout weekDays;

  private FragmentCalendarBinding(@NonNull LinearLayout rootView, @NonNull Button btnAddEvent,
      @NonNull Button btnNextMonth, @NonNull Button btnPrevMonth,
      @NonNull RecyclerView calendarRecyclerView, @NonNull ListView eventsListView,
      @NonNull TextView monthYearTV, @NonNull LinearLayout weekDays) {
    this.rootView = rootView;
    this.btnAddEvent = btnAddEvent;
    this.btnNextMonth = btnNextMonth;
    this.btnPrevMonth = btnPrevMonth;
    this.calendarRecyclerView = calendarRecyclerView;
    this.eventsListView = eventsListView;
    this.monthYearTV = monthYearTV;
    this.weekDays = weekDays;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCalendarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCalendarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_calendar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCalendarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_addEvent;
      Button btnAddEvent = ViewBindings.findChildViewById(rootView, id);
      if (btnAddEvent == null) {
        break missingId;
      }

      id = R.id.btn_nextMonth;
      Button btnNextMonth = ViewBindings.findChildViewById(rootView, id);
      if (btnNextMonth == null) {
        break missingId;
      }

      id = R.id.btn_prevMonth;
      Button btnPrevMonth = ViewBindings.findChildViewById(rootView, id);
      if (btnPrevMonth == null) {
        break missingId;
      }

      id = R.id.calendarRecyclerView;
      RecyclerView calendarRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (calendarRecyclerView == null) {
        break missingId;
      }

      id = R.id.eventsListView;
      ListView eventsListView = ViewBindings.findChildViewById(rootView, id);
      if (eventsListView == null) {
        break missingId;
      }

      id = R.id.monthYearTV;
      TextView monthYearTV = ViewBindings.findChildViewById(rootView, id);
      if (monthYearTV == null) {
        break missingId;
      }

      id = R.id.weekDays;
      LinearLayout weekDays = ViewBindings.findChildViewById(rootView, id);
      if (weekDays == null) {
        break missingId;
      }

      return new FragmentCalendarBinding((LinearLayout) rootView, btnAddEvent, btnNextMonth,
          btnPrevMonth, calendarRecyclerView, eventsListView, monthYearTV, weekDays);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
