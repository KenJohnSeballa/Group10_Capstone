// Generated by view binder compiler. Do not edit!
package com.gk.koumpyol.dailyplanner.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.gk.koumpyol.dailyplanner.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChangeCredentialsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnSaveCredentials;

  @NonNull
  public final EditText confirmNewPWord;

  @NonNull
  public final EditText exPWord;

  @NonNull
  public final EditText exUsername;

  @NonNull
  public final EditText newPWord;

  @NonNull
  public final EditText newUsername;

  private ActivityChangeCredentialsBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnSaveCredentials, @NonNull EditText confirmNewPWord,
      @NonNull EditText exPWord, @NonNull EditText exUsername, @NonNull EditText newPWord,
      @NonNull EditText newUsername) {
    this.rootView = rootView;
    this.btnSaveCredentials = btnSaveCredentials;
    this.confirmNewPWord = confirmNewPWord;
    this.exPWord = exPWord;
    this.exUsername = exUsername;
    this.newPWord = newPWord;
    this.newUsername = newUsername;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChangeCredentialsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChangeCredentialsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_change_credentials, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChangeCredentialsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_saveCredentials;
      Button btnSaveCredentials = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveCredentials == null) {
        break missingId;
      }

      id = R.id.confirmNewPWord;
      EditText confirmNewPWord = ViewBindings.findChildViewById(rootView, id);
      if (confirmNewPWord == null) {
        break missingId;
      }

      id = R.id.exPWord;
      EditText exPWord = ViewBindings.findChildViewById(rootView, id);
      if (exPWord == null) {
        break missingId;
      }

      id = R.id.exUsername;
      EditText exUsername = ViewBindings.findChildViewById(rootView, id);
      if (exUsername == null) {
        break missingId;
      }

      id = R.id.newPWord;
      EditText newPWord = ViewBindings.findChildViewById(rootView, id);
      if (newPWord == null) {
        break missingId;
      }

      id = R.id.newUsername;
      EditText newUsername = ViewBindings.findChildViewById(rootView, id);
      if (newUsername == null) {
        break missingId;
      }

      return new ActivityChangeCredentialsBinding((LinearLayout) rootView, btnSaveCredentials,
          confirmNewPWord, exPWord, exUsername, newPWord, newUsername);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
